name: Update Phishtank URLs

on:
  workflow_dispatch:
  repository_dispatch:

jobs:
  update-domains:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PHISH_GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Download and process data
        run: |
          # Download gzipped data with timestamp
          curl -sL -o phishtank_data.json.gz http://data.phishtank.com/data/online-valid.json.gz
          
          # Validate and extract gzip
          if file phishtank_data.json.gz | grep -q 'gzip compressed data'; then
            echo "Extracting valid gzip file"
            gunzip -c phishtank_data.json.gz > raw_data.json
          else
            echo "Error: Downloaded file is not a valid gzip archive"
            exit 1
          fi

          # Process JSON and extract URLs
          jq -e 'map(.url) | unique' raw_data.json > phishtank_urls.json
          rm phishtank_data.json.gz raw_data.json

      - name: Check for changes
        id: changes
        run: |
          git add phishtank_urls.json
          if git diff --cached --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.PHISH_GITHUB_TOKEN }}
        run: |
          git config --global user.name "vishwas-r"
          git config --global user.email "vishwas.r.jnv@gmail.com"
          git remote set-url origin https://${{ secrets.PHISH_GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git commit -m "PhishTank URLs update: $(date +'%Y-%m-%d %H:%M UTC')"
          git push origin HEAD:main
